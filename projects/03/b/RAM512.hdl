// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // mux load to particular RAM64 chip
    DMux8Way(in = load,
             sel = address[6..8], // msb is RAM64 address
             a = ram64aload,
             b = ram64bload,
             c = ram64cload,
             d = ram64dload,
             e = ram64eload,
             f = ram64fload,
             g = ram64gload,
             h = ram64hload);
    // ram64a
    RAM64(in = in,
         load = ram64aload,
         address = address[0..5],
         out = ram64aout);

    // ram64b
    RAM64(in = in,
         load = ram64bload,
         address = address[0..5],
         out = ram64bout);

    // ram64c
    RAM64(in = in,
         load = ram64cload,
         address = address[0..5],
         out = ram64cout);

    // ram64d
    RAM64(in = in,
         load = ram64dload,
         address = address[0..5],
         out = ram64dout);

    // ram64e
    RAM64(in = in,
         load = ram64eload,
         address = address[0..5],
         out = ram64eout);

    // ram64f
    RAM64(in = in,
         load = ram64fload,
         address = address[0..5],
         out = ram64fout);

    // ram64g
    RAM64(in = in,
         load = ram64gload,
         address = address[0..5],
         out = ram64gout);

    // ram64h
    RAM64(in = in,
         load = ram64hload,
         address = address[0..5],
         out = ram64hout);

    // mux outputs of RAM64 chips together
    Mux8Way16(a = ram64aout,
              b = ram64bout,
              c = ram64cout,
              d = ram64dout,
              e = ram64eout,
              f = ram64fout,
              g = ram64gout,
              h = ram64hout,
              sel = address[6..8],
              out = out);
}