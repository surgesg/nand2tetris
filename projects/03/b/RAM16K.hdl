// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // mux load to particular RAM4K chip
    DMux4Way(in = load,
             sel = address[12..13], // msb is RAM4K address
             a = ram4kaload,
             b = ram4kbload,
             c = ram4kcload,
             d = ram4kdload);
    // ram4ka
    RAM4K(in = in,
         load = ram4kaload,
         address = address[0..11],
         out = ram4kaout);

    // ram4kb
    RAM4K(in = in,
         load = ram4kbload,
         address = address[0..11],
         out = ram4kbout);

    // ram4kc
    RAM4K(in = in,
         load = ram4kcload,
         address = address[0..11],
         out = ram4kcout);

    // ram4kd
    RAM4K(in = in,
         load = ram4kdload,
         address = address[0..11],
         out = ram4kdout);

    // mux outputs of RAM4K chips together
    Mux4Way16(a = ram4kaout,
              b = ram4kbout,
              c = ram4kcout,
              d = ram4kdout,
              sel = address[12..13],
              out = out);
}