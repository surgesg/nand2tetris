// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // mux load to particular RAM8 chip
    DMux8Way(in = load,
             sel = address[3..5], // msb is RAM8 address
             a = ram8aload,
             b = ram8bload,
             c = ram8cload,
             d = ram8dload,
             e = ram8eload,
             f = ram8fload,
             g = ram8gload,
             h = ram8hload);
    // ram8a
    RAM8(in = in,
         load = ram8aload,
         address = address[0..2],
         out = ram8aout);
     
    // ram8b
    RAM8(in = in,
         load = ram8bload,
         address = address[0..2],
         out = ram8bout);

    // ram8c
    RAM8(in = in,
         load = ram8cload,
         address = address[0..2],
         out = ram8cout);

    // ram8d
    RAM8(in = in,
         load = ram8dload,
         address = address[0..2],
         out = ram8dout);

    // ram8e
    RAM8(in = in,
         load = ram8eload,
         address = address[0..2],
         out = ram8eout);

    // ram8f
    RAM8(in = in,
         load = ram8fload,
         address = address[0..2],
         out = ram8fout);

    // ram8g
    RAM8(in = in,
         load = ram8gload,
         address = address[0..2],
         out = ram8gout);

    // ram8h
    RAM8(in = in,
         load = ram8hload,
         address = address[0..2],
         out = ram8hout);

    // mux outputs of RAM8 chips together
    Mux8Way16(a = ram8aout,
              b = ram8bout,
              c = ram8cout,
              d = ram8dout,
              e = ram8eout,
              f = ram8fout,
              g = ram8gout,
              h = ram8hout,
              sel = address[3..5],
              out = out);
}